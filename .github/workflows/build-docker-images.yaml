name: Build Docker Images

on:
  workflow_dispatch:
    inputs:
      main_service:
        description: 'build an image to main_service'
        required: false
        type: boolean
        default: true
      auth_service:
        description: 'build an image to auth_service'
        required: false
        type: boolean
        default: true
      backend_for_frontend:
        description: 'build an image to backend_for_frontend_service'
        required: false
        type: boolean
        default: true
      environment:
        description: 'Environment to push the docker images'
        type: environment
        default: 'production'
        required: true
      tag:
        description: 'tag for the images'
        required: true
        type: string
  
  jobs:
    build-and-push-docker-image-main_service:
      if: ${{ inputs.main_service == true }}
      environment:
        name: ${{ inputs.environment }}
      runs-on: ubuntu-latest
      steps:
        - name: Checkout 
          uses: actions/checkout@v3
        - name: Login to Docker Hub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKER_HUB_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
        - name: Build and push - main_service
          uses: docker/build-push-action@v2
          with:
            context: "{{defaultContext}}:main_server"
            file: Dockerfile
            builder: ${{ steps.buildx.outputs.name }}
            push: true
            tags: |
              ${{ secrets.DOCKER_HUB_USERNAME }}/social-network-fastapi-main_service:latest
              ${{ secrets.DOCKER_HUB_USERNAME }}/social-network-fastapi-main_service:${{ inputs.tag }}
            cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/social-network-fastapi-main_service:buildcache
            cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/social-network-fastapi-main_service:buildcache,mode=max

    build-and-push-docker-image-auth_service:
      if: ${{ inputs.auth_service == true }}
      environment:
        name: ${{ inputs.environment }}
      runs-on: ubuntu-latest
      steps:
        - name: Checkout 
          uses: actions/checkout@v3
        - name: Login to Docker Hub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKER_HUB_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
        - name: Build and push - auth_service
          uses: docker/build-push-action@v2
          with:
            context: "{{defaultContext}}:auth_service"
            file: Dockerfile
            builder: ${{ steps.buildx.outputs.name }}
            push: true
            tags: |
              ${{ secrets.DOCKER_HUB_USERNAME }}/social-network-fastapi-auth_service:latest
              ${{ secrets.DOCKER_HUB_USERNAME }}/social-network-fastapi-auth_service:${{ inputs.tag }}
            cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/social-network-fastapi-auth_service:buildcache
            cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/social-network-fastapi-auth_service:buildcache,mode=max

    build-and-push-docker-image-backend_for_frontend:
      if: ${{ inputs.backend_for_frontend == true }}
      environment:
        name: ${{ inputs.environment }}
      runs-on: ubuntu-latest
      steps:
        - name: Checkout 
          uses: actions/checkout@v3
        - name: Login to Docker Hub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKER_HUB_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
        - name: Build and push - backend_for_frontend
          uses: docker/build-push-action@v2
          with:
            context: "{{defaultContext}}:backend_for_frontend"
            file: Dockerfile
            builder: ${{ steps.buildx.outputs.name }}
            push: true
            tags: |
              ${{ secrets.DOCKER_HUB_USERNAME }}/social-network-fastapi-backend_for_frontend:latest
              ${{ secrets.DOCKER_HUB_USERNAME }}/social-network-fastapi-backend_for_frontend:${{ inputs.tag }}
            cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/social-network-fastapi-backend_for_frontend:buildcache
            cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/social-network-fastapi-backend_for_frontend:buildcache,mode=max
        