name: CI Auth_Service And Keycloak

on:
  pull_request:
    branches:
      - main
    paths:
      - 'backend_for_frontend/**'
  push:
    branches:
      - main
    paths:
      - 'backend_for_frontend/**'

jobs:
  tests:
    name: 'Run unit tests'
    environment:
      name: testing
    defaults:
      run:
        working-directory: ./backend_for_frontend
        shell: bash
    env:
      ENV: ${{ secrets.env }}
    # services:
      # TODO:
      # what are tte required services fot testing BFF

    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v3
        with:
          ref: main
      - name: install python version 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: install all dependencies
        run: pip install -r ./requirements.txt
      # TODO:
      # create testing for bff service and trun on CI tests 
      # - name: test with pytest
      #   run: |
      #     pip install pytest
      #     cd main_server
      #     pytest


  lint:
    name: 'Run linter Check'
    defaults:
      run:
        # Define the working directory for all run steps in the workflow
        working-directory: ./backend_for_frontend
        shell: bash
    needs: [tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: 'Checkout repository'
      - name: install python version 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: flake8 Lint
        uses: py-actions/flake8@v2
        with:
          update-pip: "true"


  CodeQL-analyze:
    name: CodeQL analyze code
    defaults:
      run:
        # Define the working directory for all run steps in the workflow
        working-directory: ./backend_for_frontend
        shell: bash
    needs: [tests]
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: python
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2


  # build-and-push-docker-image:
  #   name: push-docker-image
  #   defaults:
  #     run:
  #       # Define the working directory for all run steps in the workflow
  #       working-directory: ./backend_for_frontend
  #       shell: bash
  #   environment:
  #     name: production
  #   needs: [lint, CodeQL-analyze]
  #   runs-on: ubuntu-latest
  #   # needs: [build, git-guardian-scanning, trufflehog-credential-verification]
  #   steps:
  #     - name: Checkout 
  #       uses: actions/checkout@v3
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_HUB_USERNAME }}
  #         password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     - name: Build and push - bff_service
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: "{{defaultContext}}"
  #         file: Dockerfile
  #         builder: ${{ steps.buildx.outputs.name }}
  #         push: true
  #         tags: ${{ secrets.DOCKER_HUB_USERNAME }}/social-network-fastapi-bff_service:latest
  #         cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/social-network-fastapi-bff_service:buildcache
  #         cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/social-network-fastapi-bff_service:buildcache,mode=max